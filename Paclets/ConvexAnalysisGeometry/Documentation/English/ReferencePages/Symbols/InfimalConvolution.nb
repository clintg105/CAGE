(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     57758,       1346]
NotebookOptionsPosition[     51889,       1224]
NotebookOutlinePosition[     54335,       1285]
CellTagsIndexPosition[     54213,       1279]
WindowTitle->InfimalConvolution
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell[
          "CONVEX ANALYSIS GEOMETRY SYMBOL", "PacletNameCell",
           TextAlignment->Center], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]]]
         }]],
         StripOnInput->False], {"\<\"Convex Analysis Geometry Paclet\"\>":>
        Documentation`HelpLookup[
        "paclet:ConvexAnalysisGeometry/guide/ConvexAnalysisGeometry"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]]]
         }]],
         StripOnInput->
          False], {"\<\"ConvexAnalysisGeometry/ref/InfimalConvolution\"\>":>
        None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell["ConvexAnalysisGeometry/ref/InfimalConvolution"]}, Visible -> 
             False]]; SelectionMove[
          DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; Null], 
        Delimiter, "\<\"Copy web URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell[
               BoxData[
                MakeBoxes[
                 Hyperlink[
                 "http://reference.wolfram.com/language/\
ConvexAnalysisGeometry/ref/InfimalConvolution.html"], StandardForm]], "Input",
                TextClipboardType -> "PlainText"]}, Visible -> False]]; 
         SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; 
         Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
          NotebookLocate[{
            URL[If[
               TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$18884], 
               "http://reference.wolfram.com/system-modeler/", 
               "http://reference.wolfram.com/language/"] <> 
             "ConvexAnalysisGeometry/ref/InfimalConvolution" <> ".html"], 
            None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar",
     CacheGraphics->False]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell["ConvexAnalysisGeometry`", "ContextNameCell"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell["InfimalConvolution", "ObjectName"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]]],
     Cell[BoxData[""], "ObjectNameTranslation"]
    }]], "\[SpanFromLeft]"}
  }]], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["InfimalConvolution"]], 
         "paclet:ConvexAnalysisGeometry/ref/InfimalConvolution", 
         "ConvexAnalysisGeometry Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{"f_", ",", "g_", ",", "x_"}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro"],
     "\[LineSeparator]Computes the infimal convolution of f and g in x."
    }]]}
  }]], "Usage",
 CellID->176627362]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->119596058],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ConvexAnalysisGeometry`\>\"", "]"}]], "Input", \
"ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->765831433],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->36630293],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"WLReduce", "[", 
  RowBox[{"InfimalConvolution", "[", 
   RowBox[{
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "^", "4"}], ",", "x"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "^", "2"}], ",", 
     RowBox[{"x", "^", "4"}], ",", "%"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellProlog:>Needs["ConvexAnalysisGeometry`"],
 CellLabel->"In[1]:=",
 CellID->247530724],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        SuperscriptBox["x", "4"], 
        RowBox[{"x", "\[Equal]", "0"}]},
       {
        RowBox[{
         SuperscriptBox["x", "4"], "+", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["x", "6"]}], "+", 
             RowBox[{"56", " ", 
              SuperscriptBox["x", "8"]}], "-", 
             RowBox[{"48", " ", 
              SuperscriptBox["x", "10"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["x", "12"]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"20", " ", 
                 SuperscriptBox["x", "2"]}], "+", 
                RowBox[{"64", " ", 
                 SuperscriptBox["x", "4"]}], "-", 
                RowBox[{"96", " ", 
                 SuperscriptBox["x", "6"]}], "+", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "8"]}]}], ")"}], " ", "#1"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"8", "-", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "2"]}], "+", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "4"]}]}], ")"}], " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellLabel->"Out[1]=",
 CellID->12105179],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
7AVSFYs7v+DXnoK2k6Qx8RV/WdDwdnn1jnGumfx95/P+zpcZMwvaoxdK8dH+
+rfF4xD6zSigz8yCXAhSnL+Kalix8lZ3VVH3KRHNHf9Dm1CjuadkDfTpEwJ5
Nlch+pY0KaLw15Oyer4tcs9izUdrqfujHhbHfJeXuXaYzmEqX+7xa1WLSwa+
LAk8QJ8ZZFyqRi4EWVhzdkHHlyX0gJQlkUDnjA1I8kgZXJ/bFsm3RRQNgzfo
tvVOZ/JtkRvWbpEcRX4Xqz/k0ZLKdjEp0adjGnl0SwIM0GemWFAbPgyvJI9S
5FTwaMxc1ovE4GTm8zya4YWWkaj1p4F7sAB2T/CQUMI7XRP3N14+hHiZ04gi
qcnt02U8WpJZTeVmDIfsHAwB+ZEYwWS2nopqJI/Pyg4+416Xum9S56y4gkdL
PFHe/Q1d+gSboWh0tvxa3k9JO0u7vubbIjfMOaqrzD3g7UEhJq6gjzwF0Ht+
jQkMQJYZ4cr9dvLIzKkd49ESi2qUFOfFmpM8WuIWk0Wb0/wuqXh3S/bPKDr5
Nsobc6remPI/kgZnNb1lMAvrEZhRWksl5Wi/xK8x9OwcWTVcZzgPPECft090
Xi95TCbwPVF/oewoleR5WVjznRY1Y/eq/k5qXUrdwSX9DijGoTXI0utfJ81O
qHxZaJM6lPVfUBGF8m4eLVmx2k5H024k26d5NCYAAH3eJukVVPqjGxm8zabD
0FNtaAcS+DXGiSl5Q0Thb0iVK2j/2GbnYZKzf9hX7YXtnwp2UofNtDST/DMi
orDgn/was7hkOE6LnO0Y4vNBzE4H9Hk7lLRM0aobN9vtfBpjsyzPpDwlkJPU
id7pTPqAc03fFb4t8oe6/jDBTurQj2bSZuzc5teY8RlqItNr3xTzldyAM0Qi
Ueg66I0v6ysUipSUFLxJfb23Cz3os9809c7SKv7UqnU8hwMrG76kpc0R0KBu
49Atuqx1jifxbZH/OE3qqBXShYbM3o9e5sVefo2hBwJ8EFa5oFrm1x72OHDg
wEM00J/e10fK/NBG9u/fjxTb7cqgz/4xMKkgD783Q8vEMi2/9himy6mHRK3n
+TWGxGozF3V8RqrZtbyfjszyOQeMEUZny6/nPUl+qezmd/RGHgriuLKim5Em
/IjHMt9OVHdSk6K/vFOv4Sl/I6uEhIQggT127JhiHfQG/Ym8Yk/rI28ZrbBv
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
aj+ejv7OhqNi/f1A3Hdakh6PzP35ncJfR5f9wYOHTBx1kcXPIM+he+L+omaM
r68DAAJkXtXXMZaY2/rhhsHqjU8VqfnVufvCc/bkpT5WnfS9zoTvjsR+Z8MA
SNxjc5l/0A2nmhX9vHyXxt7ZS0lrhQ7/Q9Mx/P7TiNqMqhE2yoKwoc89Ywv3
SgaOX6t69WtnWUaviMxufgaZbRaTrFPbHycrfm1Nk2mX6aG477QnPlqZ9P3s
1McTHvz4Zu5P3B4/9FdM+R+LOj4TTaYuaPyvSQEIASFMYQoYvOxMpXZqUJJf
2XM+pfZVWn15mmudu8fJ076aszc+40eZaT8ovf9Yacrj3QmPjsY+sn7Oflcc
/Yiy4UvtwD3jXIvNyF1M8bxCn10z+llErauyrQ8IFJ24Xl3TJZEpmXmYyNTB
KZZpSlomw1LanW0+Q6SNOh3TVNoytaTzGHnEOFb9vHGmXtMbrag5ScaSDMV+
B12aa5O+V3T/sfT0H8Q++FH42iHh/v4rnCbO6GYtvf6NuoHwsbkKnUHmqVM4
2RmEm50JPxmD+Lgz7Xa7TD3QM/WgQvRtat1BpwKa3l2j69l7orN+jE7b+xk/
LLv/fXQu1yV9ryP+UUn+3xW1nyyJIpSNp0wLIraHRMakqpSyIfr0s4Nr/1NZ
8t66XHY0tLS8bbqkedLuTyWENfw+OE1m69C0srBx4v2rFYfO0HP3FdBnZXxx
p/58fDPbMSYr+jnTfPtS9w15yeuy3L9O5/65N/GxsuTv1yR9v/j+Y1mpP1gb
hVj/TX0/DG4XP53RcLim71K/OM/3xHFwsjPITtFnIbQgEDP8bgF516Oz5c1D
kQXtH6NGruX9xNlryqX+vLrxzL3qWH4tZ8+N7D3Xc/agFtBZX5D6w/T0H5ak
7u0s+/dg3QdTbecH819ami7RDSabFQM2s7fHXr5/kXGpOqNq+Ku79U6u6X9O
F6BGkBgeXH/QdvhCyWcRNUVNE6JRue/etY9m2Gx2pLGdw7Kv7jZEZHYdpCnw
mg0ufv638c35DeOzPldm9GKG3W6zmdSWpUmTrHNpMn+uP6q39JWBmvc6S19p
yPv9new9BSmPZ6Y9jlq4hTxe2h3TVdoP50mEyRe6gqMWiju/aB2JmZiv0yy7
CTnZ5hcJqhaEYwYHvQihBYGYweAXmZQ1TMzXdIwlIh87s/HNmLIXPJ+/Tkq+
F7XgVtjJ++Kb2WsLr2XvScjam5T10/vZT97I2Zub/yz6/172T0uL/4xaaKw9
2lL/XlvTyarKVxrr3urrCq2pPjTSd6uh7tjEcMLEUPzUaKpkIqtfdGVWXDQx
cm90pLiy4kZ6xoXwqE++Dv/q5MXrqJFPLoeevHz1VNip4xdvfXr18oeht09c
uXL8ctgHF26fjrz++aWwsxHx8WnRCdnZucXRxRWp5XV57T11QyMtPf0NQ6PN
qIWh4WZRb0NbR1Fbd12bqKSqLi8uK6mouuTzG9diMx58Fhb9eVjo+6G3Pwi9
/enF8OOXbn519fRHVy5/eiX0xMVbJy7eRC2cDv/qo4vhV6JOJeUk1jZnDg0V
SscyxgdjpJO5za1fdLV9PTmSNNR7fXTwbl3164M9VzsK/tJZ9UZH48my0pca
a95Iy/kVaiQm64nsvKcLCp/Pzf8fdB2MyNpzL3NP3IMf3c388Zp+Uj+B82+B
36z9IrkeRyroy6/l/TS+8i85ze/V9F0WTaZNy5uW9DPMHlrQgnDM4KAXIbQg
EDNY/SLIVVPrJZKF1n5xTtPQ7dKurzObjiVUvnwr/yknQaD0OZfmpG18Xd0g
3WtvrmbjhWtv6Ap/NdfJXaePmTu175Cg9eUbLhM5e646/qe1QCwk/EmXS4nz
hYa0IZtm0oat8Dp7rjq1kEtqINHIVZfvEu5+L+0hvkgu3cv1JLPIsA0PEchv
t3FX4NcT96oPZDe/UyH6pnUkalCSL13s0Bo8Ti+Hc4TBFoRjBtkUAAAAwA1M
STcQJFht5mWTQqWblqn6p2YqBvtv9fZHtHedb2r9rLbx3Yqa10oq/5lf9nJ2
8R8zivanFjxzP//X9/J+GZfz89jcJ6Nyfno35ye3s/fdzt57E93OZ++9vjbc
vdf9Iy1PHibNA1/zydfHWMKx90uLjqc75Edobmd47vqG2a7O/0YPdrOxXPoL
2X8tZ8/17L03cvbeytkbkb03MueJu9n7onJ+gr51fO7P0R5Iyf9NasHvHhTt
zyl5saD8ryVV/66sPVzX+EFza0inKLRv8G5dW0jHcLRMPbiklxrMaoiSBgBA
ONjt1pUVg8WstZjUZuOi0bBg0MsM+lmDTrqskyzrxDrt1NpLM6HXTmiXxh2v
UYVChP53ei2pRhSLg2JJ79z8ANLnedmAXD6gXBzSqEc0i71Lij70/9pqCx20
rYg2URdrr/XuUL/LWjGyYc0SvcxkXES2WcwaZKfVarSvgooCAAD4D9wnAgAA
CBPQZwAAAGEC+gwAACBMQJ8BAACECegzAACAMAF9BoKTiYmJ0NBQH1cuLCxE
K0dGRqKtWLVqx6FQKFJSUtDOQf+j95uuj1d2or6+ngNTdyKgz1sCjkaWQLvF
R+kTiUR4N6I32+lx//79Dz300KarIav27dv3EA2k0tvpN5BAR/KuXbvIPYPe
b3ps09cn8f1CGWyAPvsOHI0sgXYI2i2+XLYOHDhA35PoT/96PHbsGG5h0zWx
OGNNJrUarrCr63tj1zp4b+CzA+HFb0Ef4V+tfiNwV+IJ0GcfgaORJdAtBpbK
TUUvJCQErYakVbEO1titXuzQhnSR975yYWEhWgf1S98cLUG+95Y6DUjwz4F2
EbkE7y4vvwj6icE/2RKgzz4CRyMbYM/ZF33GwojcV/pC9Kf3S6QT+CKLJdeX
8Q38ozsZhuXd904DFXwr4bQQ7V6n34gOug2Bu48tAQlnfASORsbBuxTppFsZ
dMLt1RDvYfpF0zv4rgd57Ku+jT+7Xcf30ZjAxu19hPe9im95yIc48Lx1U0CW
fQSORsYhhw58UTy362z1DgXtf9Lv9UWfd+/e7UmfscgHLWhPejkjPB3n+FO8
V0mCfE8C2weORjYgJ2D4os/4YudWn9FHfvTuiz67HaPG1gb5sBXe857OCE8/
Jfl8HF8l0Y0PHm7y/Q4IAFyBo5FVfNFnt7va0+/iC6DP28G/MwI5J04HP27H
yyAhAGwKHI2swog+o7293zOeGvRuWDCPb3jZmei7+3dH6Ra3OxkAfAeORlZh
ZHyDPhXEFdcG4fmgd7zsTHzv4OWM2FJHfmwCAE7A0cgenD0fpOP7/DqnQEWY
X4fBkxudFnqZ0YQDP13vO3AcASsmAkEDHI3s4Ys+4/l1TrHVW51fR8cXffYU
nwIjVKueIwLou4sOOiNcnRy8iX9PeAGABI5G9vBFnz3Fp/jtyrrVZzwTkj5g
5Ta+G57wrnqOqKXvPZwphfwT73McAbq6vrddNwEAP4CjkT08jV045ZJyG9/t
6fq4KW712fUpJLrOOs2QhPxIJPiQJveMa0Yap8F/9KvhPUzfZJt5rgAAA0cj
S7jVZ9dpbK770+/8SKsOV9ntQtcLKOQX9YT3jI5OHguGzEDoYxJIAPAROBrZ
ALvKTtLn6j9jmMovCgAAAAAAAAAAAAAAAAAAAACb8v8DnMm2kQ==
    
    "], {{0, 151.5}, {240., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240., 151.5},
  PlotRange->{{0, 240.}, {0, 151.5}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->65167911]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->154886802],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "IndicatorFunction",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->208882292],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InfimalConvolution", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "1"}], ")"}], "^", "2"}], ",", " ", 
   RowBox[{"IndicatorFunction", "[", 
    RowBox[{
     RowBox[{"Interval", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", "x"}], "]"}], ",", 
   " ", "x"}], "]"}]], "Input",
 CellProlog:>Needs["ConvexAnalysisGeometry`"],
 CellLabel->"In[1]:=",
 CellID->18160600],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "x"}], ")"}], "2"], 
        RowBox[{"x", "\[LessEqual]", 
         RowBox[{"-", "1"}]}]},
       {"0", 
        RowBox[{
         RowBox[{"-", "1"}], "<", "x", "\[LessEqual]", "1"}]},
       {
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellLabel->"Out[1]=",
 CellID->124583351]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InfimalConvolution", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "x", "]"}], ",", " ", 
   RowBox[{"IndicatorFunction", "[", 
    RowBox[{
     RowBox[{"Interval", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", "x"}], "]"}], ",", 
   " ", "x"}], "]"}]], "Input",
 CellProlog:>Needs["ConvexAnalysisGeometry`"],
 CellLabel->"In[2]:=",
 CellID->493546965],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"Abs", "[", 
         RowBox[{"1", "+", "x"}], "]"}], 
        RowBox[{"x", "\[LessEqual]", 
         RowBox[{"-", "1"}]}]},
       {"0", 
        RowBox[{
         RowBox[{"-", "1"}], "<", "x", "\[LessEqual]", "1"}]},
       {
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], "]"}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellLabel->"Out[2]=",
 CellID->391153137]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "Properties & Relations",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->315284954],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "WLReduce",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->469685282],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WLReduce", "[", 
  RowBox[{"InfimalConvolution", "[", 
   RowBox[{
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "^", "4"}], ",", "x"}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["ConvexAnalysisGeometry`"],
 CellLabel->"In[1]:=",
 CellID->60552565],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        SuperscriptBox["x", "4"], 
        RowBox[{"x", "\[Equal]", "0"}]},
       {
        RowBox[{
         SuperscriptBox["x", "4"], "+", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["x", "6"]}], "+", 
             RowBox[{"56", " ", 
              SuperscriptBox["x", "8"]}], "-", 
             RowBox[{"48", " ", 
              SuperscriptBox["x", "10"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["x", "12"]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"20", " ", 
                 SuperscriptBox["x", "2"]}], "+", 
                RowBox[{"64", " ", 
                 SuperscriptBox["x", "4"]}], "-", 
                RowBox[{"96", " ", 
                 SuperscriptBox["x", "6"]}], "+", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "8"]}]}], ")"}], " ", "#1"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"8", "-", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "2"]}], "+", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "4"]}]}], ")"}], " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellLabel->"Out[1]=",
 CellID->7881468]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Convex Analysis Geometry Paclet"]], 
           "paclet:ConvexAnalysisGeometry/guide/ConvexAnalysisGeometry"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout"]}]}
     }]}
  }]], "MoreAboutSection"],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900., 830.4},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"InfimalConvolution",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "HasOptions" -> True, "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open, "1" -> Closed, "3" -> Closed}, 
    "ExampleSubsection" -> {"0" -> Closed, "1" -> Closed}}, "NewStyles" -> 
  True, "CitationPopupData" -> $Failed, "ShowCitation" -> False, 
  "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2025, 1, 12, 12, 2, 25.2921507}", 
    "history" -> {"XX", "", "", ""}, "context" -> "ConvexAnalysisGeometry`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Convex Analysis Geometry Symbol", "language" -> "en", "paclet" -> 
    "ConvexAnalysisGeometry", "status" -> "None", "summary" -> 
    "InfimalConvolution[f_, g_, x_] Computes the infimal convolution of f and \
g in x.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "InfimalConvolution", "titlemodifier" -> "", "metadescription" -> "", 
    "windowtitle" -> "InfimalConvolution", "type" -> "Symbol", "uri" -> 
    "ConvexAnalysisGeometry/ref/InfimalConvolution"}},
CellContext->"Global`",
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
   StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[5450, 159, 1194, 35, 70, "PrimaryExamplesSection",ExpressionUUID->"6dbd0712-ab81-43ff-8ba8-00a8bea126d0",
   CellTags->"PrimaryExamplesSection",
   CellID->119596058]},
 "RasterizedOutput"->{
  Cell[11207, 339, 27411, 457, 70, "Output",ExpressionUUID->"37f83627-eb9b-4000-a919-ed96eb401589",
   CellTags->"RasterizedOutput",
   CellID->65167911]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 53835, 1268},
 {"RasterizedOutput", 54034, 1272}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[590, 21, 3920, 101, 70, "AnchorBarGrid",ExpressionUUID->"729638e2-2cd6-4b8a-9f95-9f7d0e4ef832",
 CellID->1],
Cell[4513, 124, 50, 0, 70, "ContextNameCell",ExpressionUUID->"b44d7d1b-2f5c-4c58-b9e8-cd88812769e2"],
Cell[CellGroupData[{
Cell[4588, 128, 253, 8, 70, "ObjectNameGrid",ExpressionUUID->"866c2726-196a-4f28-803f-f9f9690e4a49"],
Cell[4844, 138, 569, 16, 70, "Usage",ExpressionUUID->"a847e8db-c2ea-4df0-9af8-40dbde06d806",
 CellID->176627362]
}, Open  ]],
Cell[CellGroupData[{
Cell[5450, 159, 1194, 35, 70, "PrimaryExamplesSection",ExpressionUUID->"6dbd0712-ab81-43ff-8ba8-00a8bea126d0",
 CellTags->"PrimaryExamplesSection",
 CellID->119596058],
Cell[6647, 196, 158, 4, 70, "Input",ExpressionUUID->"bf4e390e-67ed-4629-977c-fbb4553aae95",
 CellID->765831433],
Cell[CellGroupData[{
Cell[6830, 204, 1171, 34, 70, "ExampleSection",ExpressionUUID->"5b5fb9aa-5733-407b-8994-cd3fbaf9fd09",
 CellID->36630293],
Cell[CellGroupData[{
Cell[8026, 242, 557, 18, 70, "Input",ExpressionUUID->"c9aeeacd-175b-406b-8106-97ebe6dbef1c",
 CellID->247530724],
Cell[8586, 262, 2618, 75, 70, "Output",ExpressionUUID->"d05dc902-6cca-422f-b278-22d15b1a5195",
 CellID->12105179],
Cell[11207, 339, 27411, 457, 70, "Output",ExpressionUUID->"37f83627-eb9b-4000-a919-ed96eb401589",
 CellTags->"RasterizedOutput",
 CellID->65167911]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[38767, 804, 1186, 35, 70, "ExampleSection",ExpressionUUID->"bba489a3-ff5f-44dd-b45e-542501053f3d",
 CellID->154886802],
Cell[CellGroupData[{
Cell[39978, 843, 1207, 35, 70, "ExampleSubsection",ExpressionUUID->"04687c57-feff-4634-b130-5da349751103",
 CellID->208882292],
Cell[CellGroupData[{
Cell[41210, 882, 469, 15, 70, "Input",ExpressionUUID->"e8c50975-fbc2-4b4e-9618-5f42d03ec466",
 CellID->18160600],
Cell[41682, 899, 1575, 50, 70, "Output",ExpressionUUID->"0e2b1b79-91c9-4476-b696-eac4f8faac49",
 CellID->124583351]
}, Open  ]],
Cell[CellGroupData[{
Cell[43294, 954, 426, 13, 70, "Input",ExpressionUUID->"2183cefd-4e4d-4d64-a7b4-6e131488599b",
 CellID->493546965],
Cell[43723, 969, 1524, 48, 70, "Output",ExpressionUUID->"26e0b1f8-435a-4fcf-b71d-8e37d9e0cf27",
 CellID->391153137]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, Closed]]]],
Cell[CellGroupData[{
Cell[45511, 1028, 1203, 35, 70, "ExampleSection",ExpressionUUID->"f9180df7-bddf-4d07-aeec-a22564aa4819",
 CellID->315284954],
Cell[CellGroupData[{
Cell[46739, 1067, 1198, 35, 70, "ExampleSubsection",ExpressionUUID->"8e8f5bce-c155-4010-82eb-4ba87db5a32b",
 CellID->469685282],
Cell[CellGroupData[{
Cell[47962, 1106, 279, 8, 70, "Input",ExpressionUUID->"cec8ed16-a055-4322-b083-438679e20a48",
 CellID->60552565],
Cell[48244, 1116, 2617, 75, 70, "Output",ExpressionUUID->"d686b929-a117-4671-91de-17c81354357e",
 CellID->7881468]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[51218, 1203, 641, 17, 70, "MoreAboutSection",ExpressionUUID->"ca8dc6a6-c31a-4605-9a20-7244b4de9212"],
Cell[51862, 1222, 23, 0, 70, "FooterCell",ExpressionUUID->"b9d3f83c-1d8a-468b-9761-74e13543dec3"]
}
]
*)

(* End of internal cache information *)
