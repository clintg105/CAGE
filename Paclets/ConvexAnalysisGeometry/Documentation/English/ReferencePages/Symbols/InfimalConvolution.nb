(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     57766,       1346]
NotebookOptionsPosition[     51893,       1224]
NotebookOutlinePosition[     54341,       1285]
CellTagsIndexPosition[     54219,       1279]
WindowTitle->InfimalConvolution
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell[
          "CONVEX ANALYSIS GEOMETRY SYMBOL", "PacletNameCell",
           TextAlignment->Center], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]]]
         }]],
         StripOnInput->False], {"\<\"Convex Analysis Geometry Paclet\"\>":>
        Documentation`HelpLookup[
        "paclet:ConvexAnalysisGeometry/guide/ConvexAnalysisGeometry"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]]]
         }]],
         StripOnInput->
          False], {"\<\"ConvexAnalysisGeometry/ref/InfimalConvolution\"\>":>
        None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell["ConvexAnalysisGeometry/ref/InfimalConvolution"]}, Visible -> 
             False]]; SelectionMove[
          DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; Null], 
        Delimiter, "\<\"Copy web URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell[
               BoxData[
                MakeBoxes[
                 Hyperlink[
                 "http://reference.wolfram.com/language/\
ConvexAnalysisGeometry/ref/InfimalConvolution.html"], StandardForm]], "Input",
                TextClipboardType -> "PlainText"]}, Visible -> False]]; 
         SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; 
         Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
          NotebookLocate[{
            URL[If[
               TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$1135260], 
               "http://reference.wolfram.com/system-modeler/", 
               "http://reference.wolfram.com/language/"] <> 
             "ConvexAnalysisGeometry/ref/InfimalConvolution" <> ".html"], 
            None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar",
     CacheGraphics->False]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell["ConvexAnalysisGeometry`", "ContextNameCell"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell["InfimalConvolution", "ObjectName"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]]],
     Cell[BoxData[""], "ObjectNameTranslation"]
    }]], "\[SpanFromLeft]"}
  }]], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["InfimalConvolution"]], 
         "paclet:ConvexAnalysisGeometry/ref/InfimalConvolution", 
         "ConvexAnalysisGeometry Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{"f_", ",", "g_", ",", "x_"}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro"],
     "\[LineSeparator]Computes the infimal convolution of f and g in x."
    }]]}
  }]], "Usage",
 CellID->176627362]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->147489422],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ConvexAnalysisGeometry`\>\"", "]"}]], "Input", \
"ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->765831433],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->372678726],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"WLReduce", "[", 
  RowBox[{"InfimalConvolution", "[", 
   RowBox[{
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "^", "4"}], ",", "x"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "^", "2"}], ",", 
     RowBox[{"x", "^", "4"}], ",", "%"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellProlog:>Needs["ConvexAnalysisGeometry`"],
 CellLabel->"In[1]:=",
 CellID->247530724],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        SuperscriptBox["x", "4"], 
        RowBox[{"x", "\[Equal]", "0"}]},
       {
        RowBox[{
         SuperscriptBox["x", "4"], "+", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["x", "6"]}], "+", 
             RowBox[{"56", " ", 
              SuperscriptBox["x", "8"]}], "-", 
             RowBox[{"48", " ", 
              SuperscriptBox["x", "10"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["x", "12"]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"20", " ", 
                 SuperscriptBox["x", "2"]}], "+", 
                RowBox[{"64", " ", 
                 SuperscriptBox["x", "4"]}], "-", 
                RowBox[{"96", " ", 
                 SuperscriptBox["x", "6"]}], "+", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "8"]}]}], ")"}], " ", "#1"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"8", "-", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "2"]}], "+", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "4"]}]}], ")"}], " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellLabel->"Out[1]=",
 CellID->12105179],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztved3G9fV/+t775v78upP+C3ZiRM7RbISJ3GancdWHMdPEjuJ4hRLsS3J
cpfkShdZki2JaqQaRYmdIsUm9t57b2DvBQALQKIQhWgEwHvIM5gZohEEpxHY
nwVpgYOZczYGM9/Zc+bsvf/Pa++/dOT/fuihh07+v+i/l/77ydMnTvz3s5f/
P/TH3947eezoe4ffeP69Dw8fPXziZ6/9P2jhj/6vhx6aRv/W3q8CAAAAAABw
xZEjR/g2AQAAAHDDERp82wIAAABQgCwDAAAIE9BnAAAAYQL6DAAAIExAnwEA
ALaPQqGor6/f0soikcj7aqDPAAAA2yckJMSXqfhImfGamN27d3tRddBnAACA
bZKSkoL1dtM1jx07hlY7cOAAkmW01a51JiYm3K4M+gwAALAdIiMjSX/Y+5oi
kQiLs9MSJNpu1wd9BgAA8A+FQrF//34ksPvW2VSfQ0ND0TqFhYX0hV42BH0G
AADwj/r6etL7xULtfX28DlJ1+kIs2m5HoUGfgSBnZcVmM+v5tgLYkYhEIlJX
fdFnt66yW6caA/oMCJNZuZrtLmY6E1pT32qL/G1f7ods9wUEPL7os9sxaqzP
6H/X9UGfAWHSm/Ryy51nOx+cXOh/wFIXZclfiqMfno5+uDXydyx1AQQPLOmz
E4yZCwD+YlmxjUU9hsQTvaoLE1jqZbSzeHq9C/TqG59jqRcgSPBFn3ft2uVJ
nyMjI13XB0EGBEhiavZ09CNYOZUyMUu92Mw6sUOfk1Pus9QLECT4/nzQaSE8
HwR2Fqnhh/HIQ9/dn7Ha0Xjy77E+37lycm5Rx2pfQGDjiz7j4BSnaBS3CzGg
z4DQ6BqRZ177z3TUw+g1lf8mq30p6z/H+lx442/JpQOs9gUENr7oMw4zdBrK
2LVr1+7du92uD/oMCI2rKe2tt3+DZVPTG81qX7rhNNxRT+STh8+XmFdsrHYH
BDBu9Rl5xfX19aRvrFAocEA3mRkJO89uHw6ugj4DAmNIrDx8NhMPbqD/dYPJ
rHZnVg6RQ9DvfpNU0jLJandAAONlbJkuv4WFhXgWB1ofuc1O4d5OgD4DgiKh
sP/MhTBSM+02C9s9ShL34L5CL3776a1atrsDApWQkBAkuU4LU1JS0EL0P30h
cqfxykiZnT5yAvQZEA56g+XQ2aKYq+9jwZTlvcxBp/LiQ8QUjvAjr54ubBuc
56BTAPAF0GdAOOQ3jCOFLL35Z2JmXdMZDjpVdxDueu2t51DvF5NaOegUAHwB
9BkQDievVyOFHLxLDDjox3I56NQgqcbdTUY/inpHr4kZ1kPLAcAXQJ8BgVDS
PPXq6YIT5+LEjsiUFS1bkSl0rEYVOdz9+flbSJ+jcns46BcANgX0GRAIb5wr
RdoYH/buulQ+MnP/F5x1PZf5PNbnyCsfYxdaqTFy1jsAeAL0GRACQ9PKdWEs
yLh2EEvlQsXbnPWurPsMd1occQDr84OqEc56BwBPQGYkQAjcetCFhbEr+hlH
ZEoUZ72TUSpj8b/AZrx1qcxu56x/AHAPyDLAO/MKPVZFHJmCX8b5Ns4MsKhG
yH7f+/YeNqaifZozAwDALaDPAO8klw5iSbx6/bpDJx+xW1mPTKEjvfcT3HVe
2i1sTMjtOi4NAABXQJ8BfjGarW+cK8GS2JL1NRbJ+dy/cmzGQulhYpZd2RfY
GPTqHJZxbAYA0AF9BvilqGmC1MPZQiKUT9X8DcdmLHXfclwaXr6Q2IrtuQSx
KgCvgD4D/PLhekwKesUW9EkS92KRXJ50UyuTVYyzjeQQdFvfNHnJGIdYFYA/
QJ8BHmnqnSWVcHqkg1RIq57ralN2yzL1aHKu5dOIWmwVxKoAPAL6DPDI2dgm
LINhqR26oRQsjzOpT/NizHzOX7ABS923ylqnyAuHXLXMiz0AAPoM8EXb4Pyr
ZwgN7BlbmMt8Eed8VlSf4MUeVfNZIjSm9A2rzf72pXJsW0rZEC/2AADoM8AX
b4WWYQH8OroB/SmJ+554vaaVbvAeL/YsTxZifZYk7kF/ZlWPYvNe/7Z42bTC
i0lAkAP6DPDC9LyGHECoE0lX9PPk8K9Z0c+LSU42LOlMBx3ufX7DOC8mAUEO
6DPAC7H5vVj6Tl6rWqX7rgl7eLRqNuNZbIa2PwH9mVDUj418P6ySR6uAoAX0
GeAepcZIOs9FTWsl/8ixX3nJ6zwapqj9BJuxWPUB+nN2UUfaWdXBRbJTAKAD
+ZEA7kmrGMKidzS01GyxoiVztLkTPBpGJkqaSfkVXkImbvo8EsK9Aa4BWQY4
xmSxHj5PBHRnrKfxtFn01Nzj2SYebbOox0hLVjRr+ZFGJCrShW4b4HpWNhDk
gD4DHFPQSAV0q7RrafCN0jqqYLfVzK95M8k/J6prjWbiJReT2rC15xNa+LUN
CDZAnwGOOXGtCstdXEEfXrLUGe4o2P13fm1DLFS8jY1R1H+Ol3QOy8gLyuCU
gl/zgKAC9BngkppOCal1UrkWL5QXETVTVK0X+DUPoe2LwcbMZT5PLvwqqgHb
fCOji0fbgGAD9Bngki/v1mOhu0kTOkn8D4i0SFOlPNqGMcm7qTQghkW8sLab
uqxIZFp+LQSCB9BngDM6hqiBgqFpJV5I10ObURCjB9T1YrqMXHjiWrXTsAwA
sA3oM8AZZF7lC4nUgzZNbzQWw9kHv+fRNjqyoleJ8ZaW8+TCQpfHmgDANqDP
ADc4KnSvvZAjTS5fKH8Li6Gy4QsezaOz1HnN8bzyb+RCs8V65EIptj+9cphH
84DgAfQZ4IabGUSgx5d36unLpUk/JeazjWXzZZsTxpl6ar7fCuUq08NqLCs2
Hi0EggTQZ4ADpHIt6TzXdknJ5WblEBUPopXwaCEd+4rBbbzMxrD0CR4tBIIE
0GeAA+IK+rCsnVjPhkSiG0wmBp/T+MnJ74n53JeJePOuG/TlMXmOtE7Xq3ky
DQgiQJ8BtlFpKbezoHFDok5F9XEiH1H1Sb7Mc4uq5VsiX1PRq/Tl4o1pUfky
DwgSID8SwDbplcNY0I5cKDWZNyS6n039NZZB3VAqX+a5xSCuwIZNR3/HbrPQ
P7qW1oG/zqmoRr7MA4IEkGWAVcwW61HHtIe0ig2FoixLk+Qwr0U1xpeFbrFb
dNQQ9MyGB5oDkwraRJR5viwEggHQZ4BVipomSTVTagz0j/QjGUQyz/tP8WWe
F+bz/o7NU7dfdvrofEIL/kbnIGMSwCagzwCrfBBWiaUsNr/X6aPZ9GfFUTgZ
/vu82OadpY6rrrOgMchtJi86PWMLvJgHBAOgzwB7lLdN07Ih6Zw+nU17migm
xVNBWO8YZxupwHOzxunTr6Mb8fe6nNzGi3mAcBCJRKHroDe+rK9QKFJSUnzZ
BPQZYI+PbtZgEbud1e30kUU9Tht8HuHFvE2wW8Uxj7om4sA098265hIBgpAD
Bw48RAP96X19JMi7du2ib3Ls2DFPK4M+AyxR2yUlFWxiVu30KTnzmawkJUCo
RBzNZ10//TyyDn+76+md3NsGCIGQkBAssIp10Bv0J/KKvWyye/dutE5kZCR6
PzExgeXd0yagzwBLhNz2Jl+Lle8SafBrPuLeNh/RiCKIXNBZL7p+Sk86OjHj
fAECAh4kyEha9+3bR1+I/kTuMfrI7Sb19fVoE6Tq3hshAX0G2KCxl7r9HxG7
uf2X3vuJUxkpAWKSd1K5oJflrit8dINIOhqZ5dPAIxBIFBYWurq+yDFGC9FH
bjfB+uy0CVqCJN3t+qDPABucchQcuXK/3fVT80IvpXu6Ge7N8x1Jwo+J68h4
nuun9AegEjnk7Q8ukMwiaUWSS1/oVoFJJiYmnLxlvL6nUWvQZ4Bx2gap6Wd9
426mn2l67hJpNzL2c2/ellgoO0qkP3WUI3TifccEwhiXCYRAYINHm93qs5dH
fikpKWiF3bt3Iw3HLSC59jQeAvoMMM638c1EwetE9+EbCyWvE6LXeIpb07aM
tj+OuJSk/4/bFYqaqLz9MqWeY/MAHtm/f78nfUYfedpKJBIhQabP3/DyPBH0
GWAW0dgCqVddwzJ3q9glcY8R89Ymi7m2b4tYlINUBlTNtOsKVpv9rYtl+Pve
Kx7g3kKAL/zQZzy5DoG3Iqd8eBnfcILxbwEEFReTiCJWZ2Ob3K5gnG2i4j5M
O2DagzT550QSp+E0tyvk1I6RlyS11sSxeQBf+DG+gWfTOW2CF7oNVAFBBhiE
njuodWDO7TpLnWFY7uZzX+bYPP9YrPrAkQT1hNsVDKaVN86V4G+dWj7kdh0g
8PDj+SCOTHFa6HYeCAb0GWCQ8FQi9+ZXdxs8rSPL/weRd6jtIpe2+Y12KGXT
PE5kDtXXvinWGy2eVgMCCayrONKExPv8OtBngC/GpGrSea73kLvebtFTeTul
dRxb6B8rtDyoZqV791ijN5PfPatmlGMLAV7wFJ+CFnqaj+F2fAOPk8D4BsAq
tx4QFWA/vVXraR0y77045jurth3jZ86QqZz6Ezytk1w6iL/+m1A9NmhwG99N
Dw9EUowcY1KQ8egH8qKxg402wYMknp4ngj4DjDBNK/xU1SH2tJqq+Ru3daME
jqLuU2z2QvlbntZZUC1TZbwaxj2tBgQSSGDxLA5P+ZGw/NLHLlJSUpzyI6EW
YP4zwCpRuT2+FE6dz34RC52m+xZXpjGAfiwbmy1NfMLLamQZ3PeuVNjtds7M
A/jFS35RJ/8ZA/lFAS6ZW9STrmNJy6Sn1azLcnIg1yTr4NLCbbKim6Mslzvn
SiWZWdCR+6GoyeN+AAAfAX0Gtk886TderfTiNi6P52GJkyT8mEPrmGEu8w/Y
+CVRpJfVoh33Ee9eqbCBCw1sD9BnYJvIlJTznO913FVZH0KM4pa9yZl5TKFs
Ok2MnBf/18tqszQXurBxgjPzgIAE9BnYJuSg67HQMrPXeQuzac84ZkHEc2Ye
UyxPlhBDHHHft9u9fc3oPMKFfudyudUGLjTgP6DPwHaYV1DOc27dmJc16bOI
LcphzixkCqtRTc3cnnUfuo6ZXQQXGmAG0GdgO8Tm92Iheuti2YrVm1ep8yEK
T+DM575MRD52hHlfMza/D1xoYPtAZiTAb+ZojqL3kefVtYJW7zsKWp3kxjzG
UbWF4q8gy3/F+5r0PVMALjTgLyDLgN/E5PU6vMSKTb1EadKTjixw6dyYxzgG
SQ2Vec+y7H3lWMew/NuXyr3fWQCAJ0CfAf/Y0kQF82IflUVZK+HGQsaxrxjJ
b2EQV3lfeU7h67QWAPAE6DPgH+QsBV8m+mp7ox0FrZ7jxjyWkBX+C38RVcv5
TVcmZ7a8BS404Begz4AfSOVaWqDc5uOrC6WHiYJWDV9yYB57LHVex19kLufP
m648Dy40sD1AnwE/ILNtrAUM+rC+JP4HjoJW7vPi7hSMc63UELRRuen68YV9
5PwWSGoHbBXQZ2CrSGjOc3Hz5lkm6JpmNbjP07WDIK81+onNrzX04Erv88MB
wBXQZ2Cr3MkRYcH5IKzSl/WXOq8RBa1y/sK2bRwgL33DMVbzlS/rxxf2E/GV
FzeJrwQAJ0CfgS0xPb9ES1U35csmsoJXiGdqrRdYto4LND1RxLPOB+5zqjsB
LjTgN6DPwJaIzCac5+Phm0www9hWlqk5aZJqlq3jAtNCDzVXUOOxEgGdhCKa
C22xsm0hEDCAPgO+MzVHOc+lrVO+bGIQV5FqZrcaWTaQI2aSf04kehq458v6
clpplQsJLWybBwQMoM+A79zO6sYic+KaT84zQtVyjoiJLvwXq7ZxiaLuEyLX
aOlhHzchXejD50v0hh1TeBHgF9BnwEcmZqny3OVt0z5uNfdg/04saOUd/USh
o8rtd+1Wky+bLKopFzqtwn0RcABwAvIjAT5y01Ge23uFQToW9Sg5uGFe7GPT
Ok6xWfTk91qeKvVxq9TyIVKiF9UGVi0EAgOQZcAXhqaVpLZUtPvqPFNTHdKe
ZtU87pEXHyLS8dV/7uMmOoPljXMleB8mFPWzah4QGIA+A75wObkNC8unEbW+
byUr/DcxVbjxFGum8YO2L45IZ53yK9+3yq4dJS9zMwta9swDAgPQZ2BTukfk
pKo09Mz4uJXNRBUcCYyZdXQstHIwJrnIx61WVmzvXC7He/JOtq9bAUEL6DOw
Kd/ENWFJOR3d6PtW+rEcolp3/OOrXgv27VCoit5d133fqrh5krzYjc+o2TMP
CABAnwHvNPfNknrSMTTv+4aLVceJat0Vb7NnHo+oW4lyKvO5L29pww9vVOP9
eS2tkyXbgMAA9BnwzheR9VhMQu+1bmlDSeJeR8GUNJZs4xfTXDOV90m/hStX
daeEvOQNTO74hFEAe4A+A16o6hCTStI/sej7hsbZRkq7luXsWcgv0nv7HNeg
1C1tSF71Lm7xqgcEFaDPgBdOXvfzTlxNhg3m/50l24TAYrVjDKf8rS1tuHHU
SMaSecBOB/QZ8ERR04TfT7JmM54jnp0FUNigK9Qz0LgtPwM9G+t46hqzhaeu
QFAB+gy4xbJie5ucCZaztZlgFtVIQIYNurKdOYTdo9SsxcZeX2ctAkEF6DPg
lqwaeiSFbkvbanqJsMGZ1N+yZJ5wICvGKhu/3uq2lxxRPyG369iwDdjpgD4D
rmiXza9/W4ylI3HrkchyR9igqmnLkrXj0PTcdcSwP7PVbYemqKj5yg6fUkkD
QQXkRwJcuV86iEXj4JlC5dLWMvkEdtigK2blEPl9LcrBrW5+I6NzqylbgeAB
ZBlwYoGWTD69Ynirm+vHsslHZvZADBt0ZTbjWSKHquj2VrednKVKHhQ2TrBh
HrBzAX0GnIjN78VycfRCqcG0stXNqbDBLU4527moms86JhO+4sfmd3N68A5/
+1K50bzlHQ4EMKDPAB2xTEO6c3n1/hQzpcIGR9IZN0+YGKS1VDCOYcvxgPMK
qoAspO4H6IA+A3RuZhBJ+N8Pq7Tbt7x5kIQNuiJJ+BFxVRrN9GPzZMeAP3rJ
lMuMmwewh0KhiIyM3L8OeoP+3NImISEhExMex7VAnwGSnrEFPypY0VG1fEuk
DMoL5LBBVxYq3sFffLHyfT821xssRy+U4j1/N6eHcfMAlkBKu3v37oceemjf
OugN+tO7RItEol27dtE3QX+ihW5XBn0GSMiIti/u1PvXQpCEDbqiG8nAX1ya
uMe/FgoaqWjNYbGSWfMAlkAOMBLYlJQU/Cd6g/48duyYl02QJiNBrq+vp2+C
2nG7MugzgKnrlpL60Da4hWxsJBvCBhXBVb9pZVlOfnfjrJ/x2h/frCGSJiVB
0qQdwMTEBJLWAwcO0BeiP9FCT0MWhYWF6NPQ0FD6QuxFu90E9BnAkKmQrtxv
968FMmww8KoN+sJ83t+JqJyWc/610NAzQ14iW/vnmDUPYBzs+kZGRrouJD1q
J5BrjT51GgBByky6006APgOIvPpxUhnGpH4W9ZBT1QYDP2zQFU33LeLy9MD9
vaovnItvwb/C55F+DjEBnIHcYCS2TtKK/nT1kEn279+PvOXVdRlHnjZ+Puhl
vBr0GVjSmci60tF5vf41YjWqqBt8aQ2zFu4IzIu9VCCh2p+piYi+iUXyQlnW
OsWogQDD4KEMt/rsNOhBgoea8ag11mp4Pgh4J7F4gNSERfXWorlJyLBBcdzj
q6tbn5kXEMyk/pYIJOyN9ruRWw+IKY5vXy43WawMmgcwC5ZZt/rs6XnfQ+vQ
BRmPh2Cn2hXQ5yBnep4KSHlQNeJ3O2TY4GKAVhv0BWXDl0QgYdGrfjcilWu3
E18PcIbf+uw0Oo0Hpd0OQR9xgUH7AeFzPZ3Iz/Pe1UrLiv/pMqRUtcFgCRt0
xSCuIIc4bEb/CwtuDFfRM2ghwCAhISGe9Bl95HYTrM9OA87YhXY7ZA2CHMyI
RqmAlMp2//NbGmcaaAHOCwxauMOw2yXxPySuU0P3/W5Gu2w+cp4IV4nKhXAV
geLH80E84Oy00O2kOwzoczBzxhGQ8tXdhu20Q4YNyvLdPxYJHhS1H+NdIS8+
uJ12ChqoGTUjEhVD1gFM4tZVdutUk+ChDCTI9IVY550WYkCfg5baLiogpWN4
WyVKZzP2B2fYoCv0IQ7r8rb26oc3iBnpl5LamDIPYJZdu3bRA7pxuDda6Gl9
19FpchO3s+xAn4MTu91+PLwKn/5hKR3bacq00EOrNhhcYYNukSQ+gfeGdiBx
O+1sCFcZgHAVIRIZGYlnXxSug4cv6I//0HukxvQl2IVGC+mbOAW5kIA+Byc5
tWN+1+Z2Qt0WiuVoLvMFpszb0SjrQ4jRnsJ/bbOpb+KaIVxF4ISGhuJ8R3ji
nJPS4rELp7FlPAbiaRM6oM9BiFprfO0borxgbMF262vPpj1DDG50XWfEvJ2O
QVpDDXHotlWYu2+cCleB6ipCpn4d1+U4dts1t4ZCofC0CR3Q5yAkvrAfn/KH
zhYpNcbtNGWab6OC5lT+T58OMKRJTxJDHH0x22wqMluEf6zXvy1Rabf1YwE7
DtDnYGNMqiJdsqya0W22RpZ2ms95iRHzAgNl41dMTWiRq5YPninaZvQ9sEMB
fQ42Qu8RGXiOh1dZbdsNxJ5JeYqIaO65w4h5gQG9jsyKZmqbrWXXjpKX1MEp
/8NegB0H6HNQQU/yXCeSbrM140w9TYX8qbcSwMyk/JLBKxeZGvqbuObttwbs
FECfgwer1UbOqUNe9PYbVNR/vp261YENNfKT+/L2W2vunyUvrFUd/kd6AjsL
0OfgIb1yePtJnulI7u0jXMT++O23FmAY51q3n26UztWUdvzbvXO53Ghe2X6D
gPCBzEhBAj0rWkIRA1Eky9Pl1OCG3p96WAHPbNrTxPWLibDKqTkq0+D90sHt
NwgIH5DlIIHMU3fsYpnOYN5+g4qaDx2JJg5tv7WARN16nhjiyP5fRhq8X0bl
tZuaW2KkTUDIgD4HA+1D87SqHEw8yLNZJfE/cCQUTWWgwUDEJOukhjiUQww0
aLa+c6WCkah8YEcA+hwMfBZRi0/q09F+lpZ2YnmigAqRM0J2NY/MZjxLBFd2
hjPSYFWHmLzUtkAN2UAH9DngyafVfu0dZyY582Llu1h2FsqOMtJgoKJuv+RI
TvIHptr81pGU45NbwVjnMagAfQ5sFEuGQ2eJ6LM7Oe5rUG4V+8qyOOY7WHb0
Y1mMtBmomBeoorHmRWai/wYmFeQFN6eWgZkhgGABfQ5s7ub0kKk2/K796oRu
JJPQnJjv2leYaTOAmct8Hu8udftlptqMziV+1oNnChdUy0w1CwgN0OcApm+C
yn6WW8eYoyUvPUyUgq18j6k2A5ilzjC8u2YznmOqTaWGykAYmc3MbREgQECf
A5jTMY34FP4sopapNq1GJXnDvjzppiIP4IRZMUgNcci7mGqWXgCrZyyIaz4G
NKDPgUp52zR5/rYNMhY/oh28j6VGEv/DVbuVqWYDm/nsF4khjtYLDDYbcrsO
/75fQPb+AAX0OSBR60xHLhAFoMNTmZwoKy86SAxu1HzEYLOBzVL3TWKII+1p
BpvtHJaRl+Ds2u2migUECOhzQHI3R0SeuRK5lqlmrfo5anBDXMFUswGPRTVK
7jfTPJPFXu9kUz+0lLkfGhAIoM+BR9cIza3adgZ+Otr+OCwy0qSfMNhsMDCf
+5Ij1vtFBptVa02Hz5fg3/rq/XYGWwaEAORHCjw+dUQLfh5Zx2zLsvx/YJFR
NnzJbMsBj0YUSVza7u1jtmX6g4bt5/QGBAXIcoDxoGqEPFtFjD7WX9FMkTfp
Bik8kNoaVv08uff0Y9nMNn4+gaiJ8+6VimWjhdnGAR4BfQ4kpuepFJSM16pb
Et3G8jKT8ktmWw4SFiveJjL+FR1ktuXxGTWzyWMBgQD6HEhcSmojk4hqlxlI
IkpnLusFLC+q5rPMthwk0DNmW1QMT7dIqxgiJXpgEmoUBgigzwFDdaeEvRJI
xhmq4KlpAQLW/GQm9bfEROi2i8y2bLPZP7pB1Cg8FdXAbOMAX4A+BwbIW0Y+
Mz49kRfNePuLjmz883l/Y7zx4GGpM5wYI7r/FOONtw7MkRfo/IZxxtsHuAf0
OTCIye9lr7KGzaQmnWfd4H1mGw8qVjTTtOj4Isbbj8jsJg+DeYWe8fYBjgF9
DgB6xhbIszKjapjx9jV9sYSqxD0GCeu2CZldaqH0MOONL6oNr31L5E26ngYF
VnY8oM8BwBeR9YznQaIz50gfoaj/go32gwo9rfTMiobhxwSI4uZJ8mLd2DvD
ePsAl4A+73Sya8fI87FzWMZ4+6a5FurJoAxcMgaQJv/cUfTqGhvtn41twsfD
8fAqswVyWO1gQJ93NFK5jhTnuzk9bHShqPuEqNCU8xIb7Qch6rZQ4ilh6m/Z
aH9YrCSPii/vwlyOHQzo847mako7Pg2PXChVa42Mt28zacQx33U8GbzHePvB
iUU1Qj0lnGYlzVRyySCt6OQiG10AHAD6vHOpbKdKOVe0TbPRhaY/gcj2HPs9
uwXmAzCGrOhV4ilhxTtstG9ZsZ68Xo2PjZDbDKdhATgD8iPtUBbUhjfOEYnL
LiS2sNTLXPafiYRIdZ+x1EVwoh/LIl1oq575pwarG7NDp5QPsdEFwDYgyzuU
a2mdVIZnGSuJf03z7SxlLQZWV+2SxL1432pEkSz1EUubFQ9B3zsR0OedSFUH
NbJR2DjBUi+K+hBHyuI/sdRFMKNqPuuoG7ufpS6M5pXj4VUsJZsFOAD0ecex
uGQ4cp6oXXU+ga2RDbtlWRz7PSwg2v54lnoJZsyLvRzka20bnCcv5WkVMMrB
FvXr+LfhxIRHFwv0ecdxPZ0a2Zie17DUi24wyaEej9jNbPUS5MznH3AUczzJ
Xi/ReT3kATM0rWSvo+AkMjJy165dD62D3qA/fd82NDQUbYX+97QC6PPOoqaL
SlKXV89iDpz53JeJmMHaj9nrJcjRDaeSLrTNpGapl2Wj5b2rlfiY+eouFFZg
kpSUFCSw+/btK1wHvUF/oje+bIvcZizsoM+BgXLJcNRRlftcPFsjGwizvIt6
MjjXzF5HQY59xSiOe8wxiBTHXkfNfbPkZf1B9Qh7HQUbSGB3796tUBDPXtGb
3ev4su3+/fux1w36HBjcfNDFXpI6OsqGL4mYwcw/stcLsLq2q78gdnX2/7La
Eb3S96hExWpfQUJ9fT1S15CQEPpC9CdauOlYdGRkJFZm0OfAoLabGtnIrRtj
r6N1p+5xwqnri2GvIwBhpE1iNLI5iVG7bH7ncjk+fk5HN7LXUfCA1dVpNAOL
thfJXXWMbBw7dmzTlUGfdwRqrYlMv/9NXBOrfemGUqhBUSM4Wqwzl/NnR3rA
kM3X3gYNPTPkJT67huECW0GIW1fZrVPtxP79+5E+KxQK0OfA4BZtZGNihq0H
SRhZ3t8JuWBzUgFAoiWD6OO+b2N5qsxtWgJ/dEfGal8BDx5AdqvP6CNPW+FH
itjrBn0OAOpFNLenll23x7zQQ91uz0DqMy6wmZamox9xxBJGsNrXko66EYMy
hdvED31GPjPynA8cOEBfGfR554JOqLccJ9TZWHZHNhBKR8zgXObzbPcFkKia
ThMZR1OYr0voRF23lMrLUTbIdncBDJJZT/pMKrDrJnhkg76yd312gkH7ge0T
kUmNbIxJ2R0NXtHNkM6zpjea1b4AOhb1OFXhcSiF7e7u5lARK10jcra7C1Tw
80G3+uxWcgsLC9FH+LEgBs/iwEvcRhGCIAuZivZp8jzKYv+BDpk3XpK41241
sd0dQEdRfZy4c8lifU6j0bxCZh89Hl6lN1jY7jEgwSPJ6P9NF2KwnnvCraSD
PgsWqVx78EwRB9EoGLtFR06rU7dfZbs7wAmTjJpotzxZzHZ3olE5eem/ndXN
dncBCfJ4XYcy8KCHW2cYLazfCPjPO5dzCS349EEqjbSa7e6WuiOojMTLcM/L
A7Kig3j/ywv/zUF36ZXDpERXdzJfqTYYwI8ISW8ZO8/0h4NYkz1lQILngzuU
jCrq3KloZ6U2ihPS+78gUvE3nuKgO8AVw3Q5NXmGk7B6spLsa98Uzy1CfZwt
Q+bQ2LcOekMP917dLAMS6PNOpHd8gRTnW5ldHPSoHUwmlcGiZjHtEuCduew/
ERntKlmpe+XE1NwSeaSF3mvloMfAA6lxZGTk/nXQG7o4r6571Gi52+FohEgk
8vLpKuiz8DBbrB/dqMGnzPtXK7XLZg46nXvwPBGTUn2cg+4AT+hHMsgLpVnJ
RbrmkpZJUqJz2MwbAPgB6LPQiM6jahJ1DrNSmc4J/UQ+la1O3slBj4AXZlJ/
Qww0NXzJTY/X0jrIQ25wCspgCQjQZ0FRJ6JiB+5zFTsgy/8HUUu65HVuegS8
oOm5y/GDWpXG+PalcrLYt91u56BTwBdAn4WDXLV82FGSm7PYW6O0jqqyJKnm
plPAC/YVgyT+h46Jjle46bSlf450DBIK+7npFNgU0GfhcCm5jTxHxllOgkSy
UHaEKAKb91duegQ2RdVKBApJ1wKFuHgAgYgv7CcPPyTX3HQKeAf0WSDk1Y+R
Z0dRE1sluZ2gZ0PSj+Vw0ymwKVbdLC3QnqMU3Da7/bOIWnwEvn2pfFFt4KZf
wAuQeUMIDE0rSXEOS2nnrF9FzUdYBGYznuOsU8AXFHWfET9N2jOcdTo4pYDp
doICZJl3DKaVj28SE+qOXSxXaozc9LuimSKdNO1AAjedAj5iUQzQbm2yOOs3
v2GclOi0Ci4m+AFeAH3mHXru/aa+Wc76VTWfJQY5k560222c9Qv4yEL5MeLR
QO7LXPZ7M4M6IFsHYCCaT0Cf+aWgYYJKxlvOnbtiM6rEMY/i03+p6wZn/QK+
Y5hp4GVqjd5g+fAGkd3uzdAymXKZs64BJ0CfeaRvfJEU5/OJrGeoo7PUdZ04
92MftRo5misCbBVZwStE0tGcl7jsd2CSdmQmcHpkAnRAn/lCu2w+ca2KGHYO
LVtQceel2G0r0qSf4hNf1fwNZ/0CWwWHdk5FrT8jGE7nsuvCRurOjrNQKcAJ
0Ge+CKcF1bYPznPZtaY/nrxxXtFCYklBM5f14jSO7iw9zHHXfD0ZAUhAn3kh
u3aUPPIzKoc57n0241kiG1Ltxxx3DWwV/VgOXxV7jbSZRUfOl0ICUu4Bfeae
rhEZKc6Xk9s47l3TG01lSFvs5bh3wA/mHUlH5cWHOO6aPjP/mzjWyxMDToA+
c4xSY3z3SgU+4NEbzmY7Y+wWvfTePsJ5rvmQy64Bv9GPUwkGDeIqjnsvaaYS
kCaVDHDce5AD+swxl2lJNpAjzXHv6vZLtDz8HEWRA9tnPvdl/KvJ8v/Bfe+R
WSLyoG3omeHegKAF9JlLHlSNkMd5di3r9bidsGqlpDirWr7luHdgOximy6hw
wvF8jns3r1g/daTmOHS2aIKr5F0A6DNntA/Ok+IcntbBvQHK+hB8gksSfmQ1
qrg3ANgOsqJXibnQWS9y3/uoREUevZ/cqtEbLNzbEIRAfiRukMq1R84TuZ1P
XKvipmoVHRMtVd1SdwTHvQsWk0U7PFPCtxU+YZxpJH9B3ZDHinXsUd0pobJ4
pfLgYAQhIMscYFmxfnW3gTy2+yYWubdhoexNIh9a6m+5790/OsYSWW3fajNn
NBwOy9lb0X2W1Y6YYqH8LfwjzqT8atVu5d6A1PIhCFrhEtBnDrhJm+df0jLF
vQEGSTXleg2ncm+AHxR3fI6Us6STxRp82c3voC7CcvagV88Up9F5/kG/CVJ3
hPFiQ3gqFVdV3QnBTewC+sw2GZXD5PGcWMRP5SBZ/gEiE1rOX3gxYKtEl/1h
XTnXXhUith5lTszXhOc+EZa7Z12i97aPxrPUEYMoG7/CP+X0WuynlHsDlo2W
zyLqoJ4sN4A+s0pdN1Xv9WISPwnP9WNZpNO1PFXKiw1bIrbshatImddkcy8S
armaxbR+0/LmmwVPkdeCpiGhj8xblxckcY8RM9jrPuHFhsnZpf+eLcJH9fHw
KpWW0zn8QQXoM3uM0B55n7xevaQ38WLGbMZzRPRZyWu8GLAlSrtOheUSaplQ
+ZJSN8V2j7NK0Z2S/yElurr3Its9bpOl7gjygmuScVdth05j7wx5bF/gNvVi
UAH6zBJLOtNJR3o69BqV8DOfTdsXQ2VvmOfnXPad+MqXSJ1MrvmX1sBR2qhF
zVhc+Z/Irlkd9GaEmfTfEeEqRQf5siGrhsohEw8lv9kB9JklQu+1kkdvXTcP
44QIm0UvSSSiuRerT/Jig48YzZqUukNIG6+uK2RGwxsG8xKXBmiWZ5Nr/klK
dE7zeytWfu53fEE/lk0LV8njy4yIzG7qwXfzJF9mBDCgz2yQUESVqn9QNcKX
Geo2Kpp7ZUm40dxLyzN0bcxt+cBmW+HeDKN56UHDUdKM1LpDOoOcezN8RFb4
byJcJWM/XzZYbfZTUdTE0a4R4e6uHQroM+PQ88ncetDFlxkrOySaW6bqjyl7
gVTF4s4v+LWnoO0j0pj4ir8saHi7vHrHONdM/r7zeX/ny4yZBe3RC6X4aH/9
2+JxCP1mFNBnZkEuBCnOX0U1rFh5q7uqqPuUiOaO/6FNqNHcU7IG+vQJgTyb
qxB9S5oUUfjrSVk93xa5Z7Hmw7XU/VEPi2O+y8tcO0znMJUv98S1qsUlA1+W
BB6gzwwyLlUjF4IsrDm7oOPLEnpAypJIoHPGBiR5pAyuz22L5NsiiobBG3Tb
eqcz+bbIDWu3SI4iv4vVx3m0pLJdTEr06ZhGHt2SAAP0mSkW1Ibj4ZXkUYqc
Ch6Nmct6kRiczHyeRzO80DIStf40cA8WwO4JHhJKeKdr4v7Gy4cQL3MaUSQ1
uX26jEdLMqup3IzhkJ2DISA/EiOYzNZTUY3k8VnZwWfc61L3TeqcFVfwaIkn
yru/oUufYDMUjc6WX8v7KWlnadfXfFvkhjlHdZW5B7w9KMTEFfSRpwB6z68x
gQHIMiNcud9OHpk5tWM8WmJRjZLivFjzEY+WuMVk0eY0v0sq3t2S/TOKTr6N
8sacqjem/I+kwVlNbxnMwnoEZpTWUkk52i/xaww9O0dWDdcZzgMP0OftE53X
Sx6TCXxP1F8oO0oleV4W1nynRc3Yvaq/k1qXUndwSb8DinFoDbL0+tdJsxMq
XxbapA5l/RdURKG8m0dLVqy209G0G8n2aR6NCQBAn7dJegWV/uhGBm+z6TD0
VBvagQR+jXFiSt4QUfgbUuUK2j+22XmY5Owf9lV7Yfungp3UYTMtzST/jIgo
LPgnv8YsLhlO0CJnO4b4fBCz0wF93g4lLVO06sbNdjufxtgsyzMpTwnkJHWi
dzqTPuBc03eFb4v8oa4/TLCTOvSjmbQZO7f5NWZ8hprI9No3xXwlN+AMkUgU
ug5648v6CoUiJSUFb1Jf7+1CD/rsN029s7SKP7VqHc/hwMqGL2lpcwQ0qNs4
dIsua53jSXxb5D9OkzpqhXShIbP3o5d5sZdfY+iBAB+EVS6olvm1hz0OHDjw
EA30p/f1kTI/tJH9+/cjxXa7MuizfwxMKsjD783QMrFMy689huly6iFR63l+
jSGx2sxFHZ+RanYt76cjs3zOAWOE0dny63lPkl8qu/kdvZGHgjiurOhmpAk/
4rHMtxPVndSk6C/v1Gt4yt/IKiEhIUhgjx07plgHvUF/Iq/Y0/rIW0Yr7Nu3
D7vN5CZIot2uD/rsB+J5zVuXyqh6VeM8n552q3k27RnHJKvf82sMiXxpKKn6
H6SOxZa/OKfi2aljCpm6P7Hqr+RXiyl7QbLQxrdRa+iG06hRjq4bfJuzmlM3
Rp4mZ2IaDaYd88TBF5C6YrGlL0R/7tq1y5M/jJ1tp2EQJM5o4cSEmww5oM9b
ZWZBdzycevzR0MP/DARl4ykqiai0lm9z1hiUFtJnDj9ofFNnCKjnRJaVZXqm
DvQSTabxbdQai1XvU6Mccp4fWCOSSgbIk+V8QksghRYWFha6esuRkZFoIfrI
7SbIbXb1rtEStInbgWjQ5y0hVy1/eKOaPN6KmvjPqbg8VUrlQWoWRJ3ThoEN
wdHVvR5v93Y6TUMR9G9a1XOBb4vWCqxI7xFJZedzX+bbnDXocSuXkwVxo8EI
bnUVj2B4GeJwBQ9xuH22CPrsO0qN8bOIWlocCv/T722mJXHc40Rh7ge/X7Xz
7JyYLJq81hN0yeqZyuDXJLYZlhbTh6MfNB7lrKyAJ/Sj1DRL3oMKMXdzesgT
51pagER/Y111q8/oIx8bmZiYQOvv3r3b7aegzz6i0Zu+ukulun1QLYgIBUni
j3Gp0LWRjZkGfo2ZVYriK/5MG3D+X4HHBjLFwtIwfaT9bslzrcPR/Jq0WH1y
7cCIWjswDMIY8rpFq2IfkclnEA1T4HFjt/rs6XmfEwqFYt++fV7GQ0CffWHZ
tHI6hoqKSi1nsWKp72j648VRxDm41MHzRK++6Sy625zb8oHQ4qBZxWozF3eE
0PdA8/AdPu0xqqT3f4Fd6JnU39rMGh6NIaFHf0fl9vBtznbZpj6T4hwSEuJp
nSMuMGB3YGFZsZ2LbyaPq3vFA3xbtIZJ3kmlZ+d7MlV1byhdmuoHrvFrD1+0
riflI185ze9p+XsqapguE0c/QmRiqfqALzOcuJTURqtauLNzKG1nfIMUZ+9r
giB7x263X0xqpR1RgqiDabdZ5jL/QOTZiHvMouYtI5NcPZhS+x9SkcJznxiQ
8FYOTwiMzVXdKaaqgUcW/25slrcUgqq2UPIirumN4ssMOk7eTnLpIN8W+Y/f
zwdFItGuXbvQapGRm+Q8B332TliKEO/IFHWfUOVBx7L4MqNnKp3uLiZW/U2m
FsT1i1/0xoWclg8EckMhd5QpXIsqnWviyww6y0aLAEcL/QDPr3PSWO/z61Zp
4pySsnnOc9BnL1xP7ySPottZQnmioR1MIs84ZdNpXmwwryyXdH5Jl6Cy7tNW
m5kXY4RJ60g0ff9kNBxWanmYjWnRTEkS9xAzfNKesRmV3NvgypLO9MWdevLk
ShTGmOFW8RSfghZ6ik9By30X51XQZ8/Qa8cjoebbHALTQg+tKuhfebFBstBK
n6cRnruvd0pAmYKEg3ihObb8f8kddaPgFwNiHgZ/licKyWNGXvI69wa4ZVFt
oM9WjRbMzemWcBvfTX/ehwNSyDEQvAL6v94Ft5IO+uyK3b4alkrl2w9LEcp0
TfuKYS7zj8S5FvuoWcnDjaGTW5had2hRw/88cMFisujoGUjwjQa6++DYDHX7
ZaEFMSFUWuOpKGrO6k6cdIdEFc/i8JQfCY9Rk8PRD3kG4gd9wWhaCb1HPRC8
nNzGb9ZQOouV71HDziPpHPeuNczlbhxWre0XUPY2IdM1nkzfbzFlL4zPVXFs
w0LF21Ru8EGhpBDUGyzfxDVRhQt3ZuiKl/yidP95YmIi1DOQf2NTNHrTGdqT
C+EMayCWOsN5dIF6p7NuFjxFKsztoqdHZ8s5tmFHM6fqocewoFdlzzkuR+zX
b75eoPK0zDZy1rV3zBYrfdLdpaRWy0rg5OjYJqDPJHLVMv2ZxZ1sn1Jtc4OO
FrErLz7EaddGeUH7xxum9ba8p13mOYR5h+KU4T+u4k9c1mExKwbEsd8npmUm
/8zEd45oOtfSqIlS38Y3640Wvi0SBKDPGKlc+9GNGmFWHzbOt5HiPJv6G6th
gbOu+8W59KJU6NU2GstZ7wHJ9EJzQuVf6bu0pu8yZ70vTxQQx1LUw+K4x+12
K2ddbwr9ifypqAa1NgDzRW8V0OfV9XI8712poM2ZF9BsH9NCrzjmEXGMYwrr
fCs3/S6blE4PttIb3pCpd3A0gXCw223VvRc3TB2v/Ou0vJmb3pe6buK4wuno
hxcr3+WmUx+hl1oOuV0nD9yqKz4C+jw4pTh6oZRKfFQliMRHGJtZO5/zZ3H0
bizOulGOprENSgpuFz1DF5CWEUFEnwUSk7K6uIo/0XdyXX+YzcZFBntF3WfU
FPrGrzno0XcSi/rJk/Hk9WrkO/FtEZ8EuT53Dsv+e7aIPB7yG8b5tmgD8uKD
tHIYNznoUW9cKOn8gi4aaXWH5lUCGu0JJFZs5krRtxumdpT/cXimhIOuF0rf
oA6tjjAOevSdlLIh8pR87ZvitsHgfdgRzJmRytumycMAvUpbp/i2aAMLtNl0
quYzHPTYPZlCn6SxnoRtk/wAwPYZm6uMKn2evtsL2j5S68Ssdmqz6Ody/kLL
zsFzQlQnMqtH6OdmScsU3xbxQxDKMia1fIh+ANR0Sfi2aAP0YtyK6hNsdzej
6E6vf4MuESm1/5lVCmgGS2BjsS5X9WzIARiWy/qj2BXdzGz676hJ0QOJrHa3
Vao6xPQz9P5OzqTkN0Goz3a7nf6k+PD5ks5hYZXGU7df4Swgd8VqrOm7vEEZ
+M5dHLRIF9tT6w7Rf4jkmn+x+tzQrBySOIphrUu0UOJWMKJR+ZuhVCHmmw+6
bDbBRItxQrDp8+KS4SwtXumTWzXT84JIXU6y1HWdyrCR+7LNwuIj7AFJflTp
7+mCkNd6XKEV1iB8sNExnkgvrYsjWYzmJZa6M823SxJ+RB5yuiGf8vZwhlSu
DbldR56wZ2IaF9RBNKkjqPR5WKz8IKyS/K0vJrVql4WVck0jiqCmOmc8a9Wz
9WREoRnPbT1OF4Ho0ucHJQUsdQdsCc3yrNPkxpsFv2wfS2CpO9N8qzjuB5RE
D6ey1JF/6I2Wy8lUgOEH4VUjYkFk4eOA4NHnpr5Z+nBWdJ7g8mXRxXkm9bcW
tZt4/O2zYjM3Dt5yGtCo7buyYoVwAGExOltOzxOIXvEVLw1Ji9joyzTXLI57
jJLogXts9LIdYvN76edvU+8s3xZxQZDoc0HjBP3Hza7lreCIJ2T5B9biULA4
p/zSrBxmo5eeqfS7Jc9tzEv8xqxy5+UNCxLsdnv9wHWni+mDxjelCubzCBlm
GsWx31s/AneLYx5Wt3mrAMILObVj9LM4qybwEycGgz7Tx6/Qq65byrdFzqha
zoujH8FluKX3nzIrmH9UPTZXlVzzT6dbZtGksO5kAbeo9WKnagjohZao9QxP
OjLM1ItjHqUm3YluM9v+9kEnL/1cDkvtWNIH8n1fYOuzVK6lV9J590rFwKT7
ugY8QitW9chM6m8sTHvO86q+nJb3nc7uqp5QgylYBvECA+lix4OGo06/Y8Pg
DWYHppAXLYn/ITXxvuUcg40zQv/E4vu0p0gfhFX2jHGXkYZjAlif60Uzr31T
TM+4Mq/Q823UBuxWy0L5m+S5MJf5B2bHnLWG+fLus05ndH7bRwtLrAyeABww
JC2Kr/gL/QeNLP5d+1i83c5YTk6zvHvm/i+o6fc1HzLVMlOodaarKe10Rzq/
PjAnHQWqPt8rHqD/fFG5PVaBzZy0GhZk+f8gzwJZ4T+tBsZ8e4NZVT9wLSz3
CfqJnFp3kMtslgB7IEG+VfhL+o97t+TZ9rEEplR6ZWmCnixaVvDKim6GkZYZ
JLN6lH6O38zoWg64rKSBp8+zizp6RQb0Km+b4tsoZ0yLvXMP9pPH/0L5W6sM
ZXo0mNUNA9edJtDGlL3QL85mpH1AIKAf2ikJ3rpKP9cxnmhnouSPzaSWFf6H
mlCU8pRxVhDlv+l0DMneukgFsHx0o3pwSnADmNshwPS5qXf2jXMl5O/1WUTt
qETFt1HOLE8WSWhzmRR1nzHSrNG81DB443r+k/QTFgl1y/Bd+6qw7h0AplDq
pspFzkNYUaW/7xxnZoKcovZj8kAV4NTo1fU6s/SCdOhV3MxDnXSWCKT8SPfL
Buk/051skQAL5Sx1R9APeEZmMa0r880b+T+jn6ThufvqB64ZzPAQMPBR6ibL
uk+7qnTXRPL2M/Cv54smDtepqIclSU8yYjOzOKXTuZzcNrcorIdN/hEAsowY
ESu/jm6k/0AlLYK7htosy/R0NOtlOpO32SZS5sbBWzfyf75RmZ+oGwhfhukZ
QYZCM+6q0reLnm4cuqU3bmuGg348TxzrmHcX9bC86OCKht30en7Q3Dd75DyV
yP3gmSIBisBWCQB9flC1IRXhJzdrhqcFJ02mueaZtGfQsU1Mck560iCt3U6D
6GSs6rmAnGSnpGd1/WHLpoAaggO2BDowSrtOOak0epWLzm5n3o5JLprNeI50
LaQJP9aP5TBoNiPMLerokeDodSm5bWZBx7dd/rOj9XlErDoV1UD/OW5ndRvN
AiqphlnqvoWP6umoR6ajH5EX/mtF63+MzPRCc37rh64nYF3/Vb1xkUGzgZ3L
omastOsr14Mkp+WDKVmDf23azNrFyndpN4C7pff2rnJS8GVLlLZMHaIV3Th4
prBkx45I71x9zqgcpivzO5crGnsFNwVoRTcjLz1MH9NQNZ/1u7UBSX5a/SGn
M+5a3k9r15Q5YKfoA36ztDxT1x/uNBMPve7X/mdAnOffU2NNz12Hs/GwJPrh
ufT/MUiqmTZ8u8wr9Jfvb3Skk5AjreXbri2zE/V5aFr51d0NbvOdbJFWL6xM
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
boWdvC++mb228Fr2noSsvUlZP72f/eSNnL25+c/ezNl7L/unpcV/Ri001h5t
qX+vremjqspXmure7usKrak+NNJ3q6Hu2MRwwsRQ/NRoqmQiq190ZVZcNDFy
b3SkuLLiRnrGhfCoT74O/+qji9dRI59cDv3o8tVTYadOXLz16dXLx0Nvn7xy
5cTlsOMXbp+OvP75pbCzEfHxadEJ2dm5xdHFFanldXntPXVDIy09/Q1Do82o
haHhZlFvQ1tHUVt3XXtnTlVdXlxWUlF1yec3rsVmPPgsLPrzsND3Q29/EHr7
eGjkiUs3v7p6+sMrlz+9Enry4q2TF2+iFk6Hf/XhxfArUaeSchJrmzOHhgql
YxnjgzHSydymune72r6eHEka6r0+Oni3rvr1wZ6rHQV/6ax6o6MlpKz0pcaa
N9JyfoUaicl6Ijvv6YLC53Pz/wddByOy9tzL3BP34Ed3M3+8pp/UT+D8W+A3
a79IrseRCvrya3k/ja/8S07zezV9l0WTadPypiX9DLOHFrQgHDM46EUILQjE
DFa/CHLV1HqJZKG1X5zTNHS7tOvrzKZjCZUv38p/ykkQKH3OpTlpG19XN0j3
2pur2Xjh2hu6wl/NdXLX6WPmTu07JGh9+YbLRM6eq47/aS0QCwl/0uVS4nyh
IW3IppmU6yqJe646tZBLaiDRyFWX7xLufi/tIb5ILt3L9SSzyLANDxHIb7dx
V+DXE/eqD2Q3v1Mh+qZ1JGpQki9d7NAaPE4vh3OEwRaEYwbZFAAAAMANTEk3
ECRYbeZlk0Klm5ap+qdmKgb7b/X2R7R3nW9q/ay28d2KmtdKKv+ZX/ZydvEf
M4r2pxY8cz//1/fyfhmX8/PY3Cejcn56N+cnt7P33c7eexPdzmfvvb423L3X
/SMtTx4mzQNf88nXx1jCsfdLi46nO+RHaG5neO76htmuzv9GD3azsVz6C9l/
LWfP9ey9N3L23srZG5G9NzLnibvZ+6JyfoK+dXzuz9EeSMn/TWrB7x4U7c8p
ebGg/K8lVf+urD1c1/hBc2tIpyi0b/BuXVtIx3C0TD24pJcazGqIkgYAQDjY
7daVFYPFrLWY1GbjotGwYNDLDPpZg066rJMs68Q67dTaSzOh105ol8Ydr1GF
QoT+d3otqUYUi4NiSe/c/ADS53nZgFw+oFwc0qhH1j5V9GkWe9feLHTQtlpr
cGmxD3Wx9lrvDvW7rBUjG9Ys0ctMxkVkm8WsQXZarUb7KqgoAACA/8B9IgAA
gDABfQYAABAmoM8AAADCBPQZAABAmIA+AwAACBPQZyA4mZiYCA0N9XHlwsJC
tHJkZCTailWrdhwKhSIlJQXtHPQ/er/p+nhlJ+rr6zkwdScC+rwl4GhkCbRb
fJQ+kUiEdyN6s50e9+/f/9BDD226GrJq3759D9FAKr2dfgMJdCTv2rWL3DPo
/abHNn19Et8vlMEG6LPvwNHIEmiHoN3iy2XrwIED9D2J/vSvx2PHjuEWNl0T
izPWZFKr4Qq7ur43dq2D9wY+OxBe/Bb0Ef7V6jcCdyWeAH32ETgaWQLdYmCp
3FT0QkJC0GpIWhXrYI3d6sUObUgXee8rFxYWonVQv/TN0RLke2+p04AE/xxo
F5FL8O7y8ougnxj8ky0B+uwjcDSyAfacfdFnLIzIfaUvRH96v0Q6gS+yWHJ9
Gd/AP7qTYVjefe80UMG3Ek4L0e51+o3ooNsQuPvYEpBwxkfgaGQcvEuRTrqV
QSfcXg3xHqZfNL2D73qQx77q2/iz23V8H40JbNzeR3jfq/iWh3yIA89bNwVk
2UfgaGQccujAF8Vzu85W71DQ/if9Xl/0effu3Z70GYt80IL2pJczwtNxjj/F
e5UkyPcksH3gaGQDcgKGL/qML3Zu9Rl95Efvvuiz2zFqbG2QD1vhPe/pjPD0
U5LPx/FVEt344OEm3++AAMAVOBpZxRd9drurPf0uvgD6vB38OyOQc+J08ON2
vAwSAsCmwNHIKozoM9rb+z3jqUHvhgXz+IaXnYm+u393lG5xu5MBwHfgaGQV
RsY36FNBXHFtEJ4PesfLzsT3Dl7OiC115McmAOAEHI3swdnzQTq+z69zClSE
+XUYPLnRaaGXGU048NP1vgPHEbBiIhA0wNHIHr7oM55f5xRbvdX5dXR80WdP
8SkwQrXqOSKAvrvooDPC1cnBm/j3hBcASOBoZA9f9NlTfIrfrqxbfcYzIekD
Vm7ju+EJ76rniFr63sOZUsg/8T7HEaCr63vbdRMA8AM4GtnD09iFUy4pt/Hd
nq6Pm+JWn12fQqLrrNMMSciPRIIPaXLPuGakcRr8R78a3sP0TbaZ5woAMHA0
soRbfXadxua6P/3Oj7TqcJXdLnS9gEJ+UU94z+jo5LFgyAyEPiaBBAAfgaOR
DbCr7CR9rv4zhqn8ogAAAAAAAAAAAAAAAAAAAACwKf8/oOW2SA==
    
    "], {{0, 151.5}, {240., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240., 151.5},
  PlotRange->{{0, 240.}, {0, 151.5}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->247985869]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->154886802],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "IndicatorFunction",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->208882292],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InfimalConvolution", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "1"}], ")"}], "^", "2"}], ",", " ", 
   RowBox[{"IndicatorFunction", "[", 
    RowBox[{
     RowBox[{"Interval", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", "x"}], "]"}], ",", 
   " ", "x"}], "]"}]], "Input",
 CellProlog:>Needs["ConvexAnalysisGeometry`"],
 CellLabel->"In[1]:=",
 CellID->18160600],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "x"}], ")"}], "2"], 
        RowBox[{"x", "\[LessEqual]", 
         RowBox[{"-", "1"}]}]},
       {"0", 
        RowBox[{
         RowBox[{"-", "1"}], "<", "x", "\[LessEqual]", "1"}]},
       {
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellLabel->"Out[1]=",
 CellID->124583351]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InfimalConvolution", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "x", "]"}], ",", " ", 
   RowBox[{"IndicatorFunction", "[", 
    RowBox[{
     RowBox[{"Interval", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", "x"}], "]"}], ",", 
   " ", "x"}], "]"}]], "Input",
 CellProlog:>Needs["ConvexAnalysisGeometry`"],
 CellLabel->"In[2]:=",
 CellID->493546965],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"Abs", "[", 
         RowBox[{"1", "+", "x"}], "]"}], 
        RowBox[{"x", "\[LessEqual]", 
         RowBox[{"-", "1"}]}]},
       {"0", 
        RowBox[{
         RowBox[{"-", "1"}], "<", "x", "\[LessEqual]", "1"}]},
       {
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], "]"}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellLabel->"Out[2]=",
 CellID->391153137]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "Properties & Relations",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->315284954],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]]],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]]],
 "WLReduce",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->469685282],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WLReduce", "[", 
  RowBox[{"InfimalConvolution", "[", 
   RowBox[{
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "^", "4"}], ",", "x"}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["ConvexAnalysisGeometry`"],
 CellLabel->"In[1]:=",
 CellID->60552565],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        SuperscriptBox["x", "4"], 
        RowBox[{"x", "\[Equal]", "0"}]},
       {
        RowBox[{
         SuperscriptBox["x", "4"], "+", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["x", "6"]}], "+", 
             RowBox[{"56", " ", 
              SuperscriptBox["x", "8"]}], "-", 
             RowBox[{"48", " ", 
              SuperscriptBox["x", "10"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["x", "12"]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"20", " ", 
                 SuperscriptBox["x", "2"]}], "+", 
                RowBox[{"64", " ", 
                 SuperscriptBox["x", "4"]}], "-", 
                RowBox[{"96", " ", 
                 SuperscriptBox["x", "6"]}], "+", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "8"]}]}], ")"}], " ", "#1"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"8", "-", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "2"]}], "+", 
                RowBox[{"48", " ", 
                 SuperscriptBox["x", "4"]}]}], ")"}], " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellLabel->"Out[1]=",
 CellID->7881468]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Convex Analysis Geometry Paclet"]], 
           "paclet:ConvexAnalysisGeometry/guide/ConvexAnalysisGeometry"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout"]}]}
     }]}
  }]], "MoreAboutSection"],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900., 830.4},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"InfimalConvolution",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "HasOptions" -> True, "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open, "1" -> Closed, "3" -> Closed}, 
    "ExampleSubsection" -> {"0" -> Closed, "1" -> Closed}}, "NewStyles" -> 
  True, "CitationPopupData" -> $Failed, "ShowCitation" -> False, 
  "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2025, 1, 19, 11, 45, 12.7453585}", 
    "history" -> {"XX", "", "", ""}, "context" -> "ConvexAnalysisGeometry`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Convex Analysis Geometry Symbol", "language" -> "en", "paclet" -> 
    "ConvexAnalysisGeometry", "status" -> "None", "summary" -> 
    "InfimalConvolution[f_, g_, x_] Computes the infimal convolution of f and \
g in x.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "InfimalConvolution", "titlemodifier" -> "", "metadescription" -> "", 
    "windowtitle" -> "InfimalConvolution", "type" -> "Symbol", "uri" -> 
    "ConvexAnalysisGeometry/ref/InfimalConvolution"}},
CellContext->"Global`",
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
   StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[5452, 159, 1194, 35, 70, "PrimaryExamplesSection",ExpressionUUID->"c7b95ee0-6d75-4af3-952e-8e315c7f5f1c",
   CellTags->"PrimaryExamplesSection",
   CellID->147489422]},
 "RasterizedOutput"->{
  Cell[11210, 339, 27412, 457, 70, "Output",ExpressionUUID->"7a775f61-ea92-4bfa-8fd4-52a963cc0fdc",
   CellTags->"RasterizedOutput",
   CellID->247985869]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 53840, 1268},
 {"RasterizedOutput", 54039, 1272}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[590, 21, 3922, 101, 70, "AnchorBarGrid",ExpressionUUID->"af08e02b-1455-4191-a58a-325ce9458b8a",
 CellID->1],
Cell[4515, 124, 50, 0, 70, "ContextNameCell",ExpressionUUID->"704e7528-8fdb-472d-9a55-f290ee77d81f"],
Cell[CellGroupData[{
Cell[4590, 128, 253, 8, 70, "ObjectNameGrid",ExpressionUUID->"30a3764f-4620-469e-992c-a01c50e841e9"],
Cell[4846, 138, 569, 16, 70, "Usage",ExpressionUUID->"3a8449c6-9d3a-482a-ba66-e1c789439858",
 CellID->176627362]
}, Open  ]],
Cell[CellGroupData[{
Cell[5452, 159, 1194, 35, 70, "PrimaryExamplesSection",ExpressionUUID->"c7b95ee0-6d75-4af3-952e-8e315c7f5f1c",
 CellTags->"PrimaryExamplesSection",
 CellID->147489422],
Cell[6649, 196, 158, 4, 70, "Input",ExpressionUUID->"095be326-b66c-48e4-8ecb-304cdc89da8e",
 CellID->765831433],
Cell[CellGroupData[{
Cell[6832, 204, 1172, 34, 70, "ExampleSection",ExpressionUUID->"038bb8f3-6437-4df2-9e5f-6d1d595940c6",
 CellID->372678726],
Cell[CellGroupData[{
Cell[8029, 242, 557, 18, 70, "Input",ExpressionUUID->"efab0d47-2ffc-4229-8401-2c607a70dead",
 CellID->247530724],
Cell[8589, 262, 2618, 75, 70, "Output",ExpressionUUID->"99a20e77-ed9d-4828-bbde-79bfc5522cd7",
 CellID->12105179],
Cell[11210, 339, 27412, 457, 70, "Output",ExpressionUUID->"7a775f61-ea92-4bfa-8fd4-52a963cc0fdc",
 CellTags->"RasterizedOutput",
 CellID->247985869]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[38771, 804, 1186, 35, 70, "ExampleSection",ExpressionUUID->"366b5c01-2343-412c-ab00-ba9242e13f56",
 CellID->154886802],
Cell[CellGroupData[{
Cell[39982, 843, 1207, 35, 70, "ExampleSubsection",ExpressionUUID->"1ed98cef-28ad-4055-9490-f57a6bd58fbd",
 CellID->208882292],
Cell[CellGroupData[{
Cell[41214, 882, 469, 15, 70, "Input",ExpressionUUID->"d280c503-f0e7-4c4a-855f-253d44ad14ad",
 CellID->18160600],
Cell[41686, 899, 1575, 50, 70, "Output",ExpressionUUID->"ec94ec03-9e1c-4a0b-813b-1e4313c25c81",
 CellID->124583351]
}, Open  ]],
Cell[CellGroupData[{
Cell[43298, 954, 426, 13, 70, "Input",ExpressionUUID->"3a8df93b-4f37-42aa-86e2-4777c6c99f3c",
 CellID->493546965],
Cell[43727, 969, 1524, 48, 70, "Output",ExpressionUUID->"529a1faa-e2b4-4a7b-9dc0-c58d8234cbfa",
 CellID->391153137]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, Closed]]]],
Cell[CellGroupData[{
Cell[45515, 1028, 1203, 35, 70, "ExampleSection",ExpressionUUID->"74162f34-2f87-45b1-a7b1-17f71b05295b",
 CellID->315284954],
Cell[CellGroupData[{
Cell[46743, 1067, 1198, 35, 70, "ExampleSubsection",ExpressionUUID->"3dea8a49-8725-4eb3-9a62-ab738e8a38f7",
 CellID->469685282],
Cell[CellGroupData[{
Cell[47966, 1106, 279, 8, 70, "Input",ExpressionUUID->"e9870602-ce73-45ff-8725-6fe90377611e",
 CellID->60552565],
Cell[48248, 1116, 2617, 75, 70, "Output",ExpressionUUID->"3c487863-6fe7-4fbe-87d1-885d67d34f25",
 CellID->7881468]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[51222, 1203, 641, 17, 70, "MoreAboutSection",ExpressionUUID->"fb1c7092-e42b-49e8-8f23-3ec2d0b8d6f6"],
Cell[51866, 1222, 23, 0, 70, "FooterCell",ExpressionUUID->"73978880-4c45-4c9d-94bc-3750fce9ba23"]
}
]
*)

(* End of internal cache information *)
